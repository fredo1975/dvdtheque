spring.cloud.config.enabled=false
eureka.client.enabled=false
local.server.port=8087
server.port=8083

limit.film.size=20

spring.datasource.url=jdbc:mysql://192.168.1.104/dvdtheque?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.username = fredo
spring.datasource.password = fredo
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = false
# Naming strategy
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

hibernate.hbm2ddl.auto=validate

spring.batch.job.enabled=false

csv.dvd.file.name.import=E:/dev/dvdtheque_2.0/batch/ListeDVD.csv
rippedFlagTasklet.from.file=true
excel.dvd.file.path.export=E:/dev/liste_dvd/
excel.dvd.file.name.export=export.xlsx
dvd.file.path=G:/films

batch.save.nb.acteurs=12

themoviedb.search.movie.query=https://api.themoviedb.org/3/search/movie
themoviedb.movie.query=https://api.themoviedb.org/3/movie/
themoviedb.api.key=aa87a44fb22d65986512188cd2ec2ca0
themoviedb.poster.path.url=http://image.tmdb.org/t/p/w500

eureka.instance.hostname=localhost
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${server.port}}

hazelcast.group.name=hazelcast-local